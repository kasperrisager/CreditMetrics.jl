var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference-1","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/#","page":"Reference","title":"Reference","text":"Modules = [CreditMetrics]","category":"page"},{"location":"reference/#CreditMetrics.CreditMetrics","page":"Reference","title":"CreditMetrics.CreditMetrics","text":"Implements the CreditMetrics model for portfolio credit risk\n\n\n\n\n\n","category":"module"},{"location":"reference/#CreditMetrics.AbstractProbabilityVector","page":"Reference","title":"CreditMetrics.AbstractProbabilityVector","text":"AbstractProbabilityVector{T}\n\nAbstract type for probability vectors with entries of type T summing to one.\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.AbstractRealLineThresholds","page":"Reference","title":"CreditMetrics.AbstractRealLineThresholds","text":"AbstractRealLineThresholds{T}\n\nAbstract type for a weakly sorted vector of thresholds of type T where values are unconstrained\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.AbstractThresholdLink","page":"Reference","title":"CreditMetrics.AbstractThresholdLink","text":"Abstract type for link functions between probabilities and values on the whole real line\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.AbstractUnitIntervalThresholds","page":"Reference","title":"CreditMetrics.AbstractUnitIntervalThresholds","text":"AbstractUnitIntervalThresholds{T}\n\nAbstract type for a weakly sorted vector of thresholds of type T where values are between zero and one.\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.DeformedRealLineThresholds","page":"Reference","title":"CreditMetrics.DeformedRealLineThresholds","text":"DeformedRealLineThresholds{T, TBase <: AbstractRealLineThresholds{T}} <: AbstractRealLineThresholds{T}\n\nA weakly sorted vector of values on the real line that has been affinely deformed.\n\nDeformedRealLineThresholds holds the specification of the affine deformation and defers calculation of the deformed thresholds until they are needed.\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.NormalThresholdLink","page":"Reference","title":"CreditMetrics.NormalThresholdLink","text":"Normal distribution link specification using StatsFuns implementation of normal cdf and invcdf\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.ProbabilityVector","page":"Reference","title":"CreditMetrics.ProbabilityVector","text":"ProbabilityVector{T, TVec <: AbstractVector{T}} <: AbstractProbabilityVector{T}\n\nTrusted vector of probabilities of type T that sum to one.\n\nProbabilityVector(ps::TVec) where {T, TVec<:AbstractVector{T}}\n\nConvert a vector of probabilities to a ProbabilityVector, thereby ensuring that probabilities are non-negative and sum to one (trusted). Regarding the last requirement, this constructor is very unforgiving.\n\nProbabilityVector(apv::AbstractProbabilityVector{T}) where {T}\nProbabilityVector(auit::AbstractUnitIntervalThresholds{T}) where {T}\n\nConvert to ProbabilityVector other types that are trusted.\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.RealLineThresholds","page":"Reference","title":"CreditMetrics.RealLineThresholds","text":"RealLineThresholds{T, TVec <: AbstractVector{T}} <: AbstractRealLineThresholds{T}\n\nA weakly sorted vector of values on the real line.\n\nThe UnitIntervalThresholds struct is used to check that values are weakly sorted, and using     the type system to express that.\n\nRealLineThresholds(rlt::TVec) where {T, TVec <: AbstractVector{T}}\n\nConvert a raw vector of thresholds rlt of type T to a RealLineThresholds\n\nRealLineThresholds(arlt::AbstractRealLineThresholds{T}) where {T}\n\nConvert an AbstractRealLineThresholds arlt to a RealLineThresholds by extracting the raw thresholds\n\nRealLineThresholds(auit::AbstractUnitIntervalThresholds{TUnit}, atl::AbstractThresholdLink{TUnit, TReal}) where {TUnit, TReal}\n\nConvert an AbstractUnitIntervalThresholds auit to a RealLineThresholds using the link atl\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.StudentThresholdLink","page":"Reference","title":"CreditMetrics.StudentThresholdLink","text":"Student's distribution link specification using StatsFuns implementation of Student's cdf and invcdf\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.UnitIntervalThresholds","page":"Reference","title":"CreditMetrics.UnitIntervalThresholds","text":"UnitIntervalThresholds{T, TVec <: AbstractVector{T}} <: AbstractUnitIntervalThresholds{T}\n\nA weakly sorted vector of values on the interval from zero and one.\n\nThe UnitIntervalThresholds struct is used to check that values are in interval and weakly sorted, and using the type system to express that.\n\nUnitIntervalThresholds(thr::TVec) where {T, TVec <: AbstractVector{T}}\n\nConvert a vector thr of thresholds of type T to a UnitIntervalThresholds\n\nUnitIntervalThresholds(auit::AbstractUnitIntervalThresholds{T})\n\nConvert an AbstractUnitIntervalThresholds auit to a UnitIntervalThresholds by extracting its thresholds\n\nUnitIntervalThresholds(apv::AbstractProbabilityVector{T}) where {T}\n\nConvert an AbstractProbabilityVector to a UnitIntervalThresholds\n\nUnitIntervalThresholds(arlt::AbstractRealLineThresholds{TReal}, atl::AbstractThresholdLink{TUnit, TReal}) where {TUnit, TReal}\n\nConvert an AbstractRealLineThresholds arlt to a UnitIntervalThresholds using the threshold link atl\n\n\n\n\n\n","category":"type"},{"location":"reference/#CreditMetrics.cdf-Tuple{AbstractThresholdLink}","page":"Reference","title":"CreditMetrics.cdf","text":"cdf(atl::AbstractThresholdLink)\n\nGet the link function from real line to probability for the link specification atl\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.cdf-Tuple{NormalThresholdLink}","page":"Reference","title":"CreditMetrics.cdf","text":"cdf(ntl::NormalThresholdLink)\n\nGet the link function from real line to probability for ntl which is always the normal cdf\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.cdf-Tuple{StudentThresholdLink}","page":"Reference","title":"CreditMetrics.cdf","text":"cdf(stl::StudentThresholdLink)\n\nGet the link function from real line to probability for stl which is the Student's cdf with degrees      of freedom specified by stl\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.deformation","page":"Reference","title":"CreditMetrics.deformation","text":"Make a deformation of probabilities or thresholds\n\ndeformation(arlt::AbstractRealLineThresholds, push, norm)\ndeformation(auit::AbstractUnitIntervalThresholds, atl::AbstractThresholdLink, push, norm)\ndeformation(apv::AbstractProbabilityVector, atl::AbstractThresholdLink, push, norm)\n\nDeformations are made on the thresholds on the real line. They consist of a push that moves the thresholds and a norm with which the pushed thresholds are divided for proper normalization.\n\nMethods on probabilities and unit interval thresholds are provided for ease of use and also depend on a threshold link atl.\n\n\n\n\n\n","category":"function"},{"location":"reference/#CreditMetrics.deformation_value","page":"Reference","title":"CreditMetrics.deformation_value","text":"Compute the mean value after a deformation when the values for each outcome is given.\n\n\n\n\n\n","category":"function"},{"location":"reference/#CreditMetrics.invcdf-Tuple{AbstractThresholdLink}","page":"Reference","title":"CreditMetrics.invcdf","text":"invcdf(atl::AbstractThresholdLink)\n\nGet the link function from probability to real line for the link specification atl\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.invcdf-Tuple{NormalThresholdLink}","page":"Reference","title":"CreditMetrics.invcdf","text":"invcdf(ntl::NormalThresholdLink)\n\nGet the link function from probability to real line for ntl which is always the normal inverse cdf\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.invcdf-Tuple{StudentThresholdLink}","page":"Reference","title":"CreditMetrics.invcdf","text":"invcdf(stl::StudentThresholdLink)\n\nGet the link function from probability to real line for stl which is the Student's inverse cdf with degrees      of freedom specified by stl\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.meanvalue","page":"Reference","title":"CreditMetrics.meanvalue","text":"Compute the mean value when given the value for each outcome.\n\n\n\n\n\n","category":"function"},{"location":"reference/#CreditMetrics.outcome","page":"Reference","title":"CreditMetrics.outcome","text":"Compute the outcome of a particular realization of scenario\n\n\n\n\n\n","category":"function"},{"location":"reference/#CreditMetrics.outcome_value","page":"Reference","title":"CreditMetrics.outcome_value","text":"Compute the values for one or more outcomes.\n\n\n\n\n\n","category":"function"},{"location":"reference/#CreditMetrics.probabilities-Tuple{AbstractProbabilityVector}","page":"Reference","title":"CreditMetrics.probabilities","text":"probabilities(apv::AbstractProbabilityVector{T})\n\nGet the probabilities of apv in a raw format, typically an AbstractVector{T}.\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.thresholds-Tuple{AbstractUnitIntervalThresholds}","page":"Reference","title":"CreditMetrics.thresholds","text":"thresholds(auit::AbstractUnitIntervalThresholds{T}) where {T}\n\nGet the thresholds of auit in a raw format, typically an AbstractVector{T}.\n\n\n\n\n\n","category":"method"},{"location":"reference/#CreditMetrics.thresholds-Union{Tuple{AbstractRealLineThresholds{T}}, Tuple{T}} where T","page":"Reference","title":"CreditMetrics.thresholds","text":"thresholds(arlt::AbstractRealLineThresholds{T}) where {T}\n\nGet the thresholds of arlt in a raw format, typically an AbstractVector{T}.\n\n\n\n\n\n","category":"method"},{"location":"#CreditMetrics.jl-1","page":"Home","title":"CreditMetrics.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Package for efficient simulation and analysis in the CreditMetrics model of portfolio credit risk.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The package provides utilities for credit portfolio risk models where the migration between rating classes are governed by a Gaussian copula model. These models are often used by banks for credit risk Economic Capital models and the Incremental Risk Charge. This is in a sense more general than CreditMetrics, and a change of name is under consideration.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Focus is on providing high performance across the different model variations, and making the model specification abstract enough that it is also amenable to analytical approximations.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Examples of use can be found in the examples folder.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"This package is very much in its infancy. It presently covers single-period calculations for individual counterparties, and documentation and unit test is lagging a little behind. The end goal is to have an industrial strength package that can be used by academics and practitioners alike, and be used immediately in models that require internal or regulatory approval.","category":"page"},{"location":"#Contents-1","page":"Home","title":"Contents","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"home.md\", \"reference.md\"]","category":"page"}]
}
